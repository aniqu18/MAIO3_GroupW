name: Release - Build and Publish Docker Image

on:
  push:
    tags:
      - 'v*'   # Runs for v0.1, v0.2, etc.

jobs:

  train-model-workflow:
    name: Train and Evaluate Model
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('app/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt

      - name: Train model
        run: |
          echo "Training model..."
          python train/train.py

      - name: Verify artifacts
        run: |
          test -f app/artifacts/model.pkl || (echo "ERROR: model.pkl not found!" && exit 1)
          test -f app/artifacts/metrics.json || (echo "ERROR: metrics.json not found!" && exit 1)
          echo "âœ“ Artifacts verified"
          echo "Model size: $(du -h artifacts/model.pkl | cut -f1)"
          echo "Metrics:"
          cat app/artifacts/metrics.json

      - name: Upload model artifact
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: app/artifacts/model.pkl
          retention-days: 30

      - name: Upload metrics artifact
        uses: actions/upload-artifact@v4
        with:
          name: metrics
          path: app/artifacts/metrics.json
          retention-days: 90


  release:
    name: Build & Publish Release
    runs-on: ubuntu-latest
    needs: train-model-workflow
    permissions:
      contents: write        # Needed to create GitHub release
      packages: write        # Needed to push Docker image to GHCR
      actions: read          # For downloading artifacts

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download trained model
        uses: actions/download-artifact@v4
        with:
          name: trained-model
          path: app/artifacts/

      - name: Download metrics
        uses: actions/download-artifact@v4
        with:
          name: metrics
          path: artifacts/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Normalize repo name
        run: echo "REPO_LC=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push image to GHCR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.REPO_LC }}:${{ github.ref_name }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max


      - name: Run container smoke test
        run: |
          docker run -d -p 8000:8000 --name test-container ghcr.io/${{ env.REPO_LC }}:${{ github.ref_name }}
          echo "Waiting for container..."
          sleep 10
          curl -f http://localhost:8000/health
          curl -X POST http://localhost:8000/predict \
            -H "Content-Type: application/json" \
            -d '{"features":[0.05,0.05,0.02,0.01,-0.03,-0.04,-0.04,-0.02,0.01,0.02]}' \
            -f
          echo "âœ“ Release image works correctly"
          docker stop test-container
          docker rm test-container

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/metrics.json
            CHANGELOG.md
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body: |
            ðŸš€ **Automatic Release for ${{ github.ref_name }}**

            - Docker image pushed to: `ghcr.io/${{ env.REPO_LC }}:${{ github.ref_name }}`
            - Metrics included as `metrics.json`
